{
  "name": "fpr-app",
  "private": true,
  "version": "0.0.1",
  "description": "A chat bot for the Bitcoin Cash Fund Gitter Community",
  "keywords": [],
  "dependencies": {
    "async": "2.0.1",
    "cheerio": "1.0.0-rc.2",
    "connect-redis": "3.3.2",
    "ejs": "2.5.5",
    "flaverr": "^1.5.1",
    "github": "13.0.1",
    "grunt": "1.0.1",
    "include-all": "~0.1.6",
    "jsonwebtoken": "8.1.0",
    "lodash": "3.10.1",
    "moment": "^2.18.1",
    "node-github": "0.0.3",
    "node-gitter": "2.1.0",
    "parley": "^3.3.2",
    "rc": "1.0.1",
    "request": "2.83.0",
    "sails": "^1.0.0-41",
    "sails-hook-apianalytics": "^2.0.0",
    "sails-hook-grunt": "^2.0.0",
    "sails-hook-orm": "^2.0.0-21",
    "sails-hook-sockets": "^1.4.3",
    "sails-postgresql": "1.0.0-12",
    "sails-stdlib": "^0.11.0",
    "socket.io-redis": "4.0.0"
  },
  "devDependencies": {
    "@sailshq/lodash": "^3.10.2",
    "mocha": "3.0.2",
    "debug": "3.1.0",
    "eslint": "4.11.0",
    "htmlhint": "0.9.13",
    "grunt": "1.0.1",
    "sails-hook-grunt": "^2.0.0"
  },
  "scripts": {
    "start": "./web",
    "test": "npm run lint && npm run custom-tests && echo 'Done.'",
    "lint": "node ./node_modules/eslint/bin/eslint . --max-warnings=0 && echo '✔  Your code looks good.'",
    "custom-tests": "echo \"(No other custom tests yet.)\" && echo",
    "debug": "node debug app.js",
    "work": "./worker",
    "deploy": "echo 'Warning: This script assumes that this app can be deployed' && echo 'simply by force-pushing on top of the *deploy* branch.  It will also temporarily use a local *predeploy* branch for preparing assets, that it will delete after it finishes.  Please make sure there is nothing you care about on either of these two branches!!!' && echo '' && echo '' && echo 'Let us see if you are ready to deploy...' && echo '--' && git status && echo '' && echo '--' && echo 'I hope you are on the master branch and have everything pulled and stuff.' && echo 'Press CTRL+C to cancel.' && echo '(you have five seconds)' && sleep 1 && echo '...4' && sleep 1 && echo '...3' && sleep 1 && echo '...2' && sleep 1 && echo '...1' && sleep 1  && echo '' && echo 'Alright, here we go.  No turning back now!' && echo 'Wiping node_modules/ and running npm install...' && rm -rf node_modules && rm -rf package-lock.json && npm install && (git add package-lock.json && git commit -am 'AUTOMATED COMMIT: Did fresh npm install before deploying, and it caused something relevant (probably the package-lock.json file) to change!  This commit tracks that change.' || true) && echo 'Deploying as version:' && npm version patch && echo '' && git push origin master && git push --tags && (git branch -D predeploy || true) && git checkout -b predeploy && node node_modules/grunt/bin/grunt buildProd && mv www .www && git add .www && node -e 'sailsrc = JSON.parse(require(\"fs\").readFileSync(\"./.sailsrc\", \"utf8\"));  if (sailsrc.paths&&sailsrc.paths.public !== undefined || sailsrc.hooks&&sailsrc.hooks.grunt !== undefined) { throw new Error(\"Cannot complete deployment script: .sailsrc file has conflicting contents!  Please throw this midway-complete deployment, away switch back to your original branch, remove the conflicting stuff from .sailsrc, then commit and push that up.\"); }  sailsrc.paths = sailsrc.paths || {};  sailsrc.paths.public = \"./.www\";   sailsrc.hooks = sailsrc.hooks || {};  sailsrc.hooks.grunt = false;  require(\"fs\").writeFileSync(\"./.sailsrc\", JSON.stringify(sailsrc))' && git commit -am 'AUTOMATED COMMIT: Automatically bundling compiled assets as part of deploy, updating the EJS layout and .sailsrc file accordingly.' && git push origin predeploy && git checkout master && git push origin +predeploy:deploy && git push --tags && git branch -D predeploy && git push origin :predeploy && echo '' && echo '--' && echo 'OK, done.  It should be live momentarily.' && echo '(if you get impatient, check the Heroku dashboard for status)'"
  },
  "main": "app.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ConsensusBot/fpr-app"
  },
  "author": "alwaysAn0n",
  "license": "",
  "engines": {
    "node": "8"
  }
}
